@using Capstone.Web.Models
@model List<ItineraryPlacesModel>
@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>View</h2>

<html>

<head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Waypoints in directions</title>
    <script>
     var testOrigin = "@Model[0].Itinerary.StartLocationLat,@Model[0].Itinerary.StartLocationLong";
        var testWaypoints = [];
        var names = [];
       
        @{
            var counter = 0;
            var count = 0;
            var numberOfPlaces = Model[0].Places.Count;
            var lastIndex = Model[0].Places.Count - 1;

         }
        
        @foreach (var place in Model[0].Places)
        {
            @:names.push("@place.PlaceName");

            if (Model[0].Places[0] != place)
            {
           @:testWaypoints.push({ location: "@place.Latitude,@place.Longitude" });
           }
            count++;
            if (count == numberOfPlaces - 1) { break; }

        }
        
        names.push("@Model[0].Places[lastIndex].PlaceName");

        var itinerary = "@Model[0].Itinerary.Name";
        var end = "@Model[0].Places[lastIndex].Latitude,@Model[0].Places[lastIndex].Longitude";


    </script>
    <style>
        #right-panel {
            font-family: 'Roboto','sans-serif';
            line-height: 30px;
            padding-left: 10px;
        }

            #right-panel select, #right-panel input {
                font-size: 25px;
            }

            #right-panel select {
                width: 100%;
            }

            #right-panel i {
                font-size: 12px;
            }

        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }

        #map {
            height: 100%;
            float: left;
            width: 70%;
            height: 100%;
        }

        #right-panel {
            margin: 20px;
            border-width: 2px;
            width: 20%;
            height: 400px;
            float: left;
            text-align: left;
            padding-top: 0;
        }

        #directions-panel {
            margin-top: 10px;
            background-color: deepskyblue;
            padding: 10px;
            overflow: scroll;
            height: auto;
        }
    </style>
</head>
<body>


    <div id="map"></div>
    <div id="right-panel">
        <div class="route">This is your route for: @Model[0].Itinerary.Name</div>
        <div style="display:none">
            <b>Select Itinerary:</b>
            <select id="start">

                <option value="testOrigin">itinerary name goes here</option>
           
            </select>
            <br>
       

            <br>
            <b>End:</b>
            <select id="end">
                <option value="end">the end</option>
              
            </select>
            <br>

        </div>
        <div id="directions-panel"></div>
    </div>
    <script>
        window.onload = function () {
            initMap();

        }

        function initMap() {
            var directionsService = new google.maps.DirectionsService;
            var directionsDisplay = new google.maps.DirectionsRenderer;
            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 14,
                center: { lat: 41.499320, lng: -81.694361 }

            });
            directionsDisplay.setMap(map);

            function submit() {
                calculateAndDisplayRoute(directionsService, directionsDisplay);
            };

            submit();
        }
        function calculateAndDisplayRoute(directionsService, directionsDisplay) {

            for (var i = 0; i < testWaypoints.length; i++) {

                location: testWaypoints[i].value
            }

            directionsService.route({
                origin: testOrigin,
                destination: end,
                waypoints: testWaypoints,
                optimizeWaypoints: true,
                travelMode: 'DRIVING'
            }, function (response, status) {
                if (status === 'OK') {
                    directionsDisplay.setDirections(response);
                    var route = response.routes[0];
                    var summaryPanel = document.getElementById('directions-panel');
                    summaryPanel.innerHTML = '';
                    // For each route, display summary information.
                    
                    for (var i = 0; i < route.legs.length; i++) {
                        summaryPanel.innerHTML += '<b>Route Segment: ' + names[i] + ' to ' + names[ i + 1 ] + '</b><br>';
                        summaryPanel.innerHTML += route.legs[i].start_address + ' <br> <b>TO <br>';
                        summaryPanel.innerHTML += route.legs[i].end_address + '<br>';
                        summaryPanel.innerHTML += '(approx)' + ' ' + route.legs[i].distance.text + '<br><br>';
                    }
                } else {
                    window.alert('Directions request failed due to ' + status);
                }
            });
        }

    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA2wsKDwwsmQryulGyDA0r128lPT3oVdvc&callback=initMap">
    </script>
</body>
</html>